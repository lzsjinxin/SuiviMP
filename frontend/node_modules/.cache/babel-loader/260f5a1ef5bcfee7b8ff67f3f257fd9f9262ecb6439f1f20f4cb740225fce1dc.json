{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { createI18n } from 'vue-i18n';\nfunction loadLocaleMessages() {\n  const locales = require.context('./assets/json/locales', true, /[A-Za-z0-9-_,\\s]+\\.json$/i);\n  const messages = {};\n  locales.keys().forEach(key => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n    if (matched && matched.length > 1) {\n      const locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\nexport default createI18n({\n  locale: 'en',\n  fallbackLocale: 'en',\n  messages: loadLocaleMessages()\n});","map":{"version":3,"names":["createI18n","loadLocaleMessages","locales","require","context","messages","keys","forEach","key","matched","match","length","locale","fallbackLocale"],"sources":["/home/lzsjinxin/Documents/Dev/SuiviMP/frontend/src/i18n.js"],"sourcesContent":["import { createI18n } from 'vue-i18n';\n\nfunction loadLocaleMessages () {\n  const locales = require.context('./assets/json/locales', true, /[A-Za-z0-9-_,\\s]+\\.json$/i)\n  const messages = {}\n  locales.keys().forEach(key => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i)\n    if (matched && matched.length > 1) {\n      const locale = matched[1]\n      messages[locale] = locales(key)\n    }\n  })\n  return messages\n}\n\nexport default createI18n({\n  locale: 'en',\n  fallbackLocale: 'en',\n  messages: loadLocaleMessages(),\n});\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,UAAU;AAErC,SAASC,kBAAkBA,CAAA,EAAI;EAC7B,MAAMC,OAAO,GAAGC,OAAO,CAACC,OAAO,CAAC,uBAAuB,EAAE,IAAI,EAAE,2BAA2B,CAAC;EAC3F,MAAMC,QAAQ,GAAG,CAAC,CAAC;EACnBH,OAAO,CAACI,IAAI,CAAC,CAAC,CAACC,OAAO,CAACC,GAAG,IAAI;IAC5B,MAAMC,OAAO,GAAGD,GAAG,CAACE,KAAK,CAAC,qBAAqB,CAAC;IAChD,IAAID,OAAO,IAAIA,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;MACjC,MAAMC,MAAM,GAAGH,OAAO,CAAC,CAAC,CAAC;MACzBJ,QAAQ,CAACO,MAAM,CAAC,GAAGV,OAAO,CAACM,GAAG,CAAC;IACjC;EACF,CAAC,CAAC;EACF,OAAOH,QAAQ;AACjB;AAEA,eAAeL,UAAU,CAAC;EACxBY,MAAM,EAAE,IAAI;EACZC,cAAc,EAAE,IAAI;EACpBR,QAAQ,EAAEJ,kBAAkB,CAAC;AAC/B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}